// <auto-generated />
using System;
using Basic_Raytracer.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Basic_Raytracer.Migrations
{
    [DbContext(typeof(RaytraceContext))]
    [Migration("20220113101705_AddShapeProps")]
    partial class AddShapeProps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Basic_Raytracer.Tables.Camera", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("FOV")
                        .HasColumnType("REAL");

                    b.Property<double>("OriginX")
                        .HasColumnType("REAL");

                    b.Property<double>("OriginY")
                        .HasColumnType("REAL");

                    b.Property<double>("OriginZ")
                        .HasColumnType("REAL");

                    b.Property<double>("SubjectX")
                        .HasColumnType("REAL");

                    b.Property<double>("SubjectY")
                        .HasColumnType("REAL");

                    b.Property<double>("SubjectZ")
                        .HasColumnType("REAL");

                    b.Property<int?>("sceneID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("sceneID");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("Basic_Raytracer.Tables.Scene", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SceneName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("Basic_Raytracer.Tables.Shape", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorBlue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorGreen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorRed")
                        .HasColumnType("INTEGER");

                    b.Property<double>("OriginX")
                        .HasColumnType("REAL");

                    b.Property<double>("OriginY")
                        .HasColumnType("REAL");

                    b.Property<double>("OriginZ")
                        .HasColumnType("REAL");

                    b.Property<int>("SceneID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShapeName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShapeTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SceneID");

                    b.HasIndex("ShapeTypeID");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("Basic_Raytracer.Tables.ShapeType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShapeTypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ShapeTypes");
                });

            modelBuilder.Entity("Basic_Raytracer.Tables.Camera", b =>
                {
                    b.HasOne("Basic_Raytracer.Tables.Scene", "scene")
                        .WithMany()
                        .HasForeignKey("sceneID");

                    b.Navigation("scene");
                });

            modelBuilder.Entity("Basic_Raytracer.Tables.Shape", b =>
                {
                    b.HasOne("Basic_Raytracer.Tables.Scene", "Scene")
                        .WithMany()
                        .HasForeignKey("SceneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basic_Raytracer.Tables.ShapeType", "Type")
                        .WithMany()
                        .HasForeignKey("ShapeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scene");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
